# Tox (https://tox.wiki/) - run tests in isolation using virtualenv.
# Also contains config settings for tools that don't look into pyproject.toml.

[tox]
envlist =
    bandit
    flake8
    isort
    pylint
    # Python/Django combinations that are officially supported
    py3{7,8,9,10}-django32
    py3{8,9,10,11}-django41
    py3{8,9,10,11,12}-django42
    py3{10,11,12}-django50
    behave-latest
    package
    docs
    clean

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[gh-actions:env]
DJANGO =
    3.2: django32
    4.1: django41
    4.2: django42
    5.0: django50

[testenv]
description = Unit tests
deps =
    coverage[toml]
    django32: Django>=3.2,<4.0
    django41: Django>=4.1,<4.2
    django42: Django>=4.2,<5.0
    django50: Django>=5.0,<5.1
    latest: Django
    latest: git+https://github.com/behave/behave.git#egg=behave
    pytest
commands =
    coverage run -m pytest {posargs}
    coverage xml
    coverage report
    python tests/manage.py behave --tags=~@failing --tags=~@requires-live-http --simple {posargs}
    python tests/manage.py behave --tags=~@failing {posargs}

[testenv:bandit]
description = PyCQA security linter
skip_install = true
deps = bandit[toml]
commands = bandit {posargs:-c pyproject.toml -r .}

[testenv:black]
description = Ensure consistent code style
skip_install = true
deps = black
commands = black {posargs:--check --diff behave_django tests}

[testenv:clean]
description = Remove Python bytecode and other debris
skip_install = true
deps = pyclean
commands =
    pyclean {posargs:. --debris --erase TESTS-*.xml *-report.xml --yes --verbose}

[testenv:docs]
description = Build package documentation (HTML)
skip_install = true
deps = sphinx
changedir = docs
commands = make html
allowlist_externals = make

[testenv:flake8]
description = Static code analysis and code style
skip_install = true
deps = flake8
commands = flake8 {posargs}

[testenv:isort]
description = Ensure imports are ordered consistently
skip_install = true
deps = isort[colors]
commands = isort {posargs:--check-only --diff behave_django tests}

[testenv:pylint]
description = Check for errors and code smells
deps = pylint-django
commands = pylint {posargs:--exit-zero behave_django}

[testenv:package]
description = Build package and check metadata (or upload package)
skip_install = true
deps =
    build
    twine
commands =
    python -m build
    twine {posargs:check --strict} dist/*
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY_URL

[behave]
junit = yes
junit_directory = tests
paths = tests/acceptance
        tests/test_app
show_skipped = no

[flake8]
exclude = docs,.cache,.tox,*.egg-info,.ropeproject
